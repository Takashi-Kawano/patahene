レジスタ$s0, $s1にそれぞれ
0x80000000 と
0xD0000000 が保持されている

2.12.1

下記のアセンブリ・コード中の$t0の値は？
add $t0, $s0, $s1

--

0x150000000

2.12.2

0x80000000
1000 0000 0000 0000 0000 0000 0000 0000

0xD0000000
1101 0000 0000 0000 0000 0000 0000 0000

足すと
1 0101 0000 0000 0000 0000 0000 0000 0000

桁が上がるので、32ビットアーキテクチャのMIPSにおいてはオーバーフローする

$t0の値は
0101 0000 0000 0000 0000 0000 0000 0000

16進数に変換すると以下になる
0x50000000

--

2.12.3

sub $t0, $s0, $s1

0x80000000
1000 0000 0000 0000 0000 0000 0000 0000

0xD0000000
1101 0000 0000 0000 0000 0000 0000 0000

1.符号付きの場合
  000
- 101
-----
 1011

(-2^31 x 1 )- (-2^31 x 1 + 2^30 x 1 + 2^28 x 1)
=-2952790016
負の最大値は、-2147483648なのでオーバーフローする

$t0は
1011 0000 0000 0000 0000 0000 0000 0000
-402653184になる.
16進数に変換すると
0x16000000

2.符号なしの場合

0x80000000
1000 0000 0000 0000 0000 0000 0000 0000

0xD0000000
1101 0000 0000 0000 0000 0000 0000 0000

減算すると以下になり, オーバーフローする
1 1101 0000 0000 0000 0000 0000 0000 0000
$t0の値は、0xD0000000


--

2.12.4

2.12.2と2.12.3にそれぞれ回答ずみ

--

2.12.5

add $t0, $s0, $s1  # $t0 = 0101 0000 0000 0000 0000 0000 0000 0000
add $t0, $t0, $s0


  0101 0000 0000 0000 0000 0000 0000 0000
+ 1000 0000 0000 0000 0000 0000 0000 0000
-----------------------------------------
  1101 0000 0000 0000 0000 0000 0000 0000

$t0の値は、
1101 0000 0000 0000 0000 0000 0000 0000
0x1A000000

--

2.12.6

以下の命令実行時にオーバーフローが発生している
add $t0, $s0, $s1  # $t0 = 0101 0000 0000 0000 0000 0000 0000 0000

