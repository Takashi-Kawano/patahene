- MIPS命令
命令操作コード(OP)
ソース・レジスタ(SR) -> rs
ターゲット・レジスタ(TR) -> rt

- I形式命令(即値およびデータ転送命令用)
即値フィールド

- R形式命令(レジスタ用)
デスティネーション・レジスタ(DR) -> rd

各フィールド値を示せ
addi $t0, $s6, 4
add $t1, $s6, $0
sw $t1, 0($t0)
lw $t0, 0($t0)
add $s0, $t1, $t0
--

アセンブリコード
->マシンコード（マシンが判断できるようにバイナリを命令形式に合わせたフィールドに値を格納する）

--

2.5節のどこに書いている？？
あと、命令と命令形式によって分岐されるので一概に答えることができない。
図2.5 + 即値フィールドは16bit

参考
https://inst.eecs.berkeley.edu/~cs61c/resources/MIPS_Green_Sheet.pdf

--
addi $t0, $s6, 4

参考の表からaddiはI形式命令だとわかる
またOPCODEは0x8

BASIC INSTRUCTION FORMATSを参照

31-26 | 25-21 | 20-16 | 15-0
opcode | rs | rt | immediate
001000 | $s6 | $t0 | 4

REGISTER NAME, NUMBER, USE, CALL CONVENTIONを参照

$s6 -> 22 -> 10110
$t0 -> 8 -> 001000

即値は、4を16bitで表現すると -> 00000000 00000100

すなわち、
001000 10110 01000 00000000 00000100

--

add $t1, $s6, $0

R形式命令

31-26|25-21|20-16|15-11|10-6|5-0
opcode|rs|rt|rd|shamt|funct

opcode0x20 -> 100000
$t1 -> 01001
$s6 -> 10110
$0 -> 00000

100000 10110 00000 01001 00000 000000

--
sw $t1, 0($t0)

I形式命令

opcode 0x2b -> 101011
$t1 -> 01001
$t0 -> 001000

101011 01001 01000 00000000 00000000
順番rs, rtは、アセンブリの左から順番でよいか?
rs第一オペランド
rt第二オペランド

--
lw $t0, 0($t0)

I形式命令
opcode 0x23 -> 10111
$t0 -> 001000

010111 01000 01000 00000000 00000000

--
add $s0, $t1, $t0

R形式命令
opcode 0x20 -> 100000
$s0 -> 16 -> 10000
$t1 -> 01001
$t0 -> 01000

100000 01001 01000 10000 00000 000000

--
